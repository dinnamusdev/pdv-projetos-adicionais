/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import br.GerenciadorLicenca;
import br.GerenciadorLicencaArquivo;
import br.GerenciadorLicencaFinanceiro;
import br.GerenciadorLicencaLiberacao;
import br.com.log.LogDinnamus;
import br.com.ui.MetodosUI_Auxiliares;
import br.entidades.LicencaDadosContrato;
import br.manipulararquivos.ManipulacaoArquivo;
import br.seguranca.criptografia;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;

/**
 *
 * @author Fernando
 */
public class frmLicencas extends javax.swing.JDialog  {

    /**
     * Creates new form frmLicencas
     */
    private int IDContratante = 0;
    private String Contratante="";
    
    public frmLicencas(java.awt.Frame parent, boolean modal,int IDContratante,String Contratante) {
        super(parent, modal);
        this.IDContratante = IDContratante;
        this.Contratante = Contratante;
        contrato = GerenciadorLicenca.Contrato_Pesquisar(IDContratante);        
        initComponents();
        txtContratante.setText(Contratante);
        setLocationRelativeTo(null);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        licencaDadosContrato1 = contrato;
        jPanel3 = new javax.swing.JPanel();
        btIncluir = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();
        btRenovarLic = new javax.swing.JButton();
        btGerarArqLicenca = new javax.swing.JButton();
        btLiberarContrato = new javax.swing.JButton();
        btLiberarAjusteData = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        dbgLicencas = new br.com.ui.JTableDinnamuS();
        txtContratante = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        dbgFinanceiro = new br.com.ui.JTableDinnamuS();
        btBaixarParcela = new javax.swing.JButton();
        btDesfazerBaixar = new javax.swing.JButton();
        btEditarParcela = new javax.swing.JButton();
        btBoleto = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        dbgLiberacao = new br.com.ui.JTableDinnamuS();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GERENCIAMENTO DE LICENÇA");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btIncluir.setText("EDITAR LICENÇA");
        btIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirActionPerformed(evt);
            }
        });

        btFechar.setText("FECHAR");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        btRenovarLic.setText("NOVA LICENÇA");
        btRenovarLic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRenovarLicActionPerformed(evt);
            }
        });

        btGerarArqLicenca.setText("GERAR  ARQ.LICENÇA");
        btGerarArqLicenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarArqLicencaActionPerformed(evt);
            }
        });

        btLiberarContrato.setText("LIBERAR CONTRATO");
        btLiberarContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLiberarContratoActionPerformed(evt);
            }
        });

        btLiberarAjusteData.setText("LIBERAR AJUSTE DATA ACESSO");
        btLiberarAjusteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLiberarAjusteDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btRenovarLic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btLiberarContrato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btGerarArqLicenca))
                    .addComponent(btLiberarAjusteData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btIncluir)
                    .addComponent(btRenovarLic)
                    .addComponent(btGerarArqLicenca)
                    .addComponent(btFechar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLiberarContrato)
                    .addComponent(btLiberarAjusteData)))
        );

        dbgLicencas.setExibirBarra(false);

        txtContratante.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dbgLicencas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtContratante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(txtContratante, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbgLicencas, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );

        dbgFinanceiro.setExibirBarra(false);

        btBaixarParcela.setText("PAGAMENTO");
        btBaixarParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBaixarParcelaActionPerformed(evt);
            }
        });

        btDesfazerBaixar.setText("DEFAZER PAGAMENTO");
        btDesfazerBaixar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesfazerBaixarActionPerformed(evt);
            }
        });

        btEditarParcela.setText("EDITAR PARCELA");
        btEditarParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarParcelaActionPerformed(evt);
            }
        });

        btBoleto.setText("BOLETO");
        btBoleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBoletoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dbgFinanceiro, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btEditarParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btBaixarParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDesfazerBaixar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dbgFinanceiro, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btBaixarParcela)
                    .addComponent(btDesfazerBaixar)
                    .addComponent(btEditarParcela)
                    .addComponent(btBoleto))
                .addContainerGap())
        );

        jTabbedPane2.addTab("FINANCEIRO", jPanel4);

        dbgLiberacao.setExibirBarra(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dbgLiberacao, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dbgLiberacao, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("LIBERAÇÕES", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane2)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean AtualizaGrid_Financeiro_Liberacao(){
        try {
            int IDContratoAtual = RetornaCodigoContratoAtual();
            
            if(!IniciarDBG_Financeiro_AtualizarDados(IDContratoAtual)){return false;}
            
            if(!IniciarDBG_Liberacao_AtualizarDados(IDContratoAtual)){return false;}
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean AtualizarDados(){
        try {
            
            if (!AtualizarDadosDBG()){return false;}
            
            if(!AtualizaGrid_Financeiro_Liberacao()){return false;}
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean AtualizarDadosDBG(){
        try {
            
            dbgLicencas.setRsDados(GerenciadorLicenca.Contrato_Listar(IDContratante));
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private int RetornaCodigoContratoAtual(){
        int nCodigoContrato =0;
        try {
            int[] nLinha = dbgLicencas.getjTable().getSelectedRows();  
            if(nLinha.length>0){
                TableModel tm = dbgLicencas.getjTable().getModel();
                nCodigoContrato= Integer.valueOf( tm.getValueAt(nLinha[0], 0).toString());
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return nCodigoContrato; 
    }
    private boolean IniciarUI(){
        try {
            
            if (!IniciarDBG()) {return false;}
                        
            if(!IniciarDBG_Financeiro(RetornaCodigoContratoAtual())){return false;}
            
            if(!IniciarDBG_Liberacao(RetornaCodigoContratoAtual())){return false;}
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean IniciarDBG(){
        try {
            //dbgLicencas = new JTableDinnamuS();
            HashMap <Object, Integer> colunas = new HashMap<Object, Integer>();
            colunas.put("idcontrato", 20);
            colunas.put("licret", 20);
            colunas.put("licpre", 20);
            colunas.put("licpdv", 20);
            colunas.put("status", 50);
            colunas.put("iniciocontrato", 50);
            colunas.put("termimnocontrato", 50);
            colunas.put("ativado", 10);
            colunas.put("ajuste_data", 10);
            dbgLicencas.getjTable().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            dbgLicencas.setClColunas(colunas);      
            dbgLicencas.getjTable().getSelectionModel().addListSelectionListener(new ListSelectionListener() {

               @Override
               public void valueChanged(ListSelectionEvent e) {
                   
                       AtualizaGrid_Financeiro_Liberacao();
               }
           });
            
            return AtualizarDadosDBG();
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean IniciarDBG_Financeiro_AtualizarDados(int nIDContrato){
        
        try {
            
            dbgFinanceiro.setRsDados(GerenciadorLicencaFinanceiro.ListarParcelas(nIDContrato));
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
        
    }
    private boolean IniciarDBG_Liberacao_AtualizarDados(int nIDContrato){
        
        try {
            
            dbgLiberacao.setRsDados(GerenciadorLicencaLiberacao.Liberacoes_Listar(nIDContrato));
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
        
    }
    private boolean IniciarDBG_Financeiro(int nIDContrato){
        try {
            
           HashMap <Object, Integer> colunas = new HashMap<Object, Integer>();
            
            colunas.put("valor", 15);
            colunas.put("emissao", 15);
            colunas.put("vencimento", 15);
            colunas.put("pagto", 15);
            colunas.put("valorpago", 15);            
            colunas.put("meiocobranca", 20);
            colunas.put("status", 20);
            HashMap<String, DateFormat> clFormatarData = new HashMap<String, DateFormat>();
            clFormatarData.put("EMISSAO", new SimpleDateFormat("dd/MM/yyyy"));
            clFormatarData.put("VENCIMENTO", new SimpleDateFormat("dd/MM/yyyy"));
            clFormatarData.put("PAGTO", new SimpleDateFormat("dd/MM/yyyy"));
            dbgFinanceiro.setDateFormat(clFormatarData);
            HashMap<String, NumberFormat> clFormatarNumero = new HashMap<String, NumberFormat>();
            clFormatarNumero.put("VALOR",new DecimalFormat("#,##0.00;-#,##0.00"));
            clFormatarNumero.put("VALORPAGO",new DecimalFormat("#,##0.00;-#,##0.00"));
            dbgFinanceiro.setNumberFormat(clFormatarNumero);
            dbgFinanceiro.setClColunas(colunas);      
            
            return IniciarDBG_Financeiro_AtualizarDados(nIDContrato);
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean IniciarDBG_Liberacao(int nIDContrato){
        try {
            
           HashMap <Object, Integer> colunas = new HashMap<Object, Integer>();
            
            colunas.put("data_expirar", 15);
            colunas.put("liberacao", 15);
            dbgLiberacao.setClColunas(colunas);
            HashMap<String, DateFormat> clFormatarData = new HashMap<String, DateFormat>();
            clFormatarData.put("DATA_EXPIRAR", new SimpleDateFormat("dd/MM/yyyy"));
            dbgLiberacao.setDateFormat(clFormatarData);            
            
            return IniciarDBG_Liberacao_AtualizarDados(nIDContrato);
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    
  
    private void btIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirActionPerformed
    // TODO add your handling code here:       
        if( RetornaCodigoContratoAtual()>0){
            if(!"ATIVO".equalsIgnoreCase(dbgLicencas.getTbDinnamuS().getValorCelula("status").toString())){
              MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "SOMENTE CONTRATO ATIVO PODEM SER ALTERADOS", "CONTRATO DE LICENÇA");
            }
            new frmLicencaDetalhes(null, true, IDContratante, Contratante, RetornaCodigoContratoAtual()).setVisible(true);
             AtualizarDados();
        }
    }//GEN-LAST:event_btIncluirActionPerformed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btFecharActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        if(!IniciarUI()){
            MetodosUI_Auxiliares.MensagemAoUsuarioSimples(null, "Não foi possível iniciar a interface com usuário", this.getTitle(), "AVISO");
            dispose();        
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void btRenovarLicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRenovarLicActionPerformed
        // TODO add your handling code here:
       new frmLicencaDetalhes(null, true, IDContratante, Contratante, 0).setVisible(true);
       AtualizarDados();
    }//GEN-LAST:event_btRenovarLicActionPerformed
   private int RetornoCodigoParcelaAtual(){
       int IdFinanceiro =0;
       try {
           
           if("ATIVO".equalsIgnoreCase(dbgLicencas.getTbDinnamuS().getValorCelula("status").toString())){           
                if(dbgFinanceiro.getTbDinnamuS().getLinhaAtual()>=0){
                   IdFinanceiro = Integer.valueOf(dbgFinanceiro.getTbDinnamuS().getValorCelula("idfinanceiro").toString());               
                }
           }else{
               MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "O CONTRATO DE LICENÇA SELECIONADO NÃO ESTA ATIVO", Contratante);
           }
           
       } catch (Exception e) {
           LogDinnamus.Log(e, true);
       }
       return IdFinanceiro;
   }
    private void btBaixarParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBaixarParcelaActionPerformed
        // TODO add your handling code here:
        try {
        
            int nIDFinanceiro =RetornoCodigoParcelaAtual();
            if(nIDFinanceiro>0){                
                String StatusParcela = GerenciadorLicencaFinanceiro.ParcelaStatus(nIDFinanceiro);
                if("ATIVO".equalsIgnoreCase(StatusParcela)){
                    if(GerenciadorLicencaFinanceiro.ParcelaPaga(nIDFinanceiro)){
                        MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "A PARCELA JA ESTÁ PAGA", getTitle());
                    }else{
                        new frmBaixarParcela(null, true,nIDFinanceiro,Contratante).setVisible(true);
                         IniciarDBG_Financeiro_AtualizarDados(RetornaCodigoContratoAtual());
                    }
                }else{
                    MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "NÃO É POSSÍVEL REALZIAR BAIXA DE PARCELA CANCELADA", getTitle());
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
    }//GEN-LAST:event_btBaixarParcelaActionPerformed

    private void btDesfazerBaixarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesfazerBaixarActionPerformed
        // TODO add your handling code here:
         try {
        
            int nIDFinanceiro =RetornoCodigoParcelaAtual();
            if(nIDFinanceiro>0){
                
                if(!GerenciadorLicencaFinanceiro.ParcelaPaga(nIDFinanceiro)){
                    MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "A PARCELA ESTÁ EM ABERTO", getTitle());
                }else{
                     if(MetodosUI_Auxiliares.MensagemAoUsuarioOpcoes_Sim_e_Nao(null, "CONFIRMA O CANCELAMENTO DA BAIXA ?", getTitle())==MetodosUI_Auxiliares.Sim()){
                         if(GerenciadorLicencaFinanceiro.DesfazerBaixaParcela(nIDFinanceiro)){
                            MetodosUI_Auxiliares.MensagemAoUsuarioSimplesINFO(null, "BAIXA CANCELADO COM SUCESSO", getTitle());
                             IniciarDBG_Financeiro_AtualizarDados(RetornaCodigoContratoAtual());
                         }else{
                             MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "NÃO FOI POSSÍVEL CANCELAR A BAIXA", getTitle());
                         }
                     }
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_btDesfazerBaixarActionPerformed

    private void btEditarParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarParcelaActionPerformed
        // TODO add your handling code here:
        try {
           int nIDFinanceiro =RetornoCodigoParcelaAtual();
            if(nIDFinanceiro>0){
                if(GerenciadorLicencaFinanceiro.ParcelaPaga(nIDFinanceiro)){
                    MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "PARCELAS PAGAS NÃO PODEM SER EDITADAS", getTitle());
                }else{
                   new frmParcelaEditar(null, true, nIDFinanceiro).setVisible(true);
                    IniciarDBG_Financeiro_AtualizarDados(RetornaCodigoContratoAtual());
                }
            }   
            
         
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
         
        }
    }//GEN-LAST:event_btEditarParcelaActionPerformed

    private void btGerarArqLicencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarArqLicencaActionPerformed
        // TODO add your handling code here:
        try {
            String cArquivo = GerenciadorLicencaArquivo.GerarArquivoControle(IDContratante, RetornaCodigoContratoAtual());
            
            if(!"".equals(cArquivo)){
                new frmLocalGravacao(null, true,cArquivo).setVisible(true);                
                ManipulacaoArquivo.ExcluirArquivo(cArquivo);
                
            }else{
                MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "NÃO FOI POSSÍVEL GERAR O ARQUIVO DE LICENÇA", getTitle());
            }
            
         
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
         
        }
    }//GEN-LAST:event_btGerarArqLicencaActionPerformed

    private void btLiberarContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLiberarContratoActionPerformed
        // TODO add your handling code here:
        try {
            Integer nContratoAtual  = RetornaCodigoContratoAtual();
            if(nContratoAtual>0){
                String cContraSenha ="";
                
                boolean bAtivado = Boolean.parseBoolean(dbgLicencas.getTbDinnamuS().getValorCelula("ativado").toString());
                if(bAtivado){
                   if(MetodosUI_Auxiliares.MensagemAoUsuarioOpcoes_Sim_e_Nao(null, "O CONTRATO JÁ FOI ATIVADO NO CLIENTE\n\nDESEJA PROSSEGUI MESMO ASSIM ?", "ATENÇÃO")!=MetodosUI_Auxiliares.Sim()){
                      return;
                   }
                }
                cContraSenha = MetodosUI_Auxiliares.InputBox(this, "DIGITE A CONTRA-SENHA", "LIBERAÇÃO DO CONTRATO", "INFO");
                if(cContraSenha!=null){
                    if (cContraSenha.trim().length()>0) {
                        String cLiberacao = criptografia.DesencriptRC4(cContraSenha, nContratoAtual.toString());
                        if(cLiberacao.trim().length()>0){    
                            if(MetodosUI_Auxiliares.MensagemAoUsuarioOpcoes_Sim_e_Nao(null, "CODIGO DE LIBERAÇÃO ["+ cLiberacao +"] \n\nDESEJA ATUALIZAR O STATUS DESSE CONTRATO ?" ,"LIBERAR CONTRATO")==MetodosUI_Auxiliares.Sim()){
                                if(GerenciadorLicenca.Contrato_AtualizarStatus(nContratoAtual)){
                                    AtualizarDadosDBG();
                                    MetodosUI_Auxiliares.MensagemAoUsuarioSimplesINFO(null, "STATUS ATUALIZADO COM SUCESSO", "CONTRATO ATIVO");                        
                                }else{
                                   MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "NÃO FOI POSSÍVEL ATUALIZAR STATUS", "CONTRATO INATIVO");
                                }
                            }
                        }else{
                            MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "CÓDIGO INVÁLIDO", "CONTRATO INATIVO");            
                        }
                    }
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_btLiberarContratoActionPerformed

    private void btBoletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBoletoActionPerformed
        // TODO add your handling code here:
        try {
           int nIDFinanceiro =RetornoCodigoParcelaAtual();
           if(nIDFinanceiro>0){
               GerenciadorLicencaFinanceiro.Gerar_Boleto(nIDFinanceiro);
           }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_btBoletoActionPerformed

    private void btLiberarAjusteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLiberarAjusteDataActionPerformed
        // TODO add your handling code here:
  try {
            Integer nContratoAtual  = RetornaCodigoContratoAtual();
            if(nContratoAtual>0){
                String cContraSenha ="";
                
                
                cContraSenha = MetodosUI_Auxiliares.InputBox(this, "DIGITE A CONTRA-SENHA", "LIBERAÇÃO PARA AJUSTE DE DATA ULT. ACESSO", "INFO");
                if(cContraSenha!=null){
                    if (cContraSenha.trim().length()>0) {
                        String cLiberacao = criptografia.DesencriptRC4(cContraSenha, nContratoAtual.toString());
                        if(cLiberacao.trim().length()>0){    
                            GerenciadorLicenca.Contrato_AtualizarAjustesData(nContratoAtual);
                            AtualizarDadosDBG();
                            MetodosUI_Auxiliares.MensagemAoUsuarioSimples(null, "CODIGO DE LIBERAÇÃO ["+ cLiberacao +"]" ,"LIBERAR ATUALIZAÇÃO DATA ULT. ACESSO","AVISO");                                                           
                        }else{
                            MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "CÓDIGO INVÁLIDO", "CONTRATO INATIVO");            
                        }
                    }
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_btLiberarAjusteDataActionPerformed
   
    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBaixarParcela;
    private javax.swing.JButton btBoleto;
    private javax.swing.JButton btDesfazerBaixar;
    private javax.swing.JButton btEditarParcela;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btGerarArqLicenca;
    private javax.swing.JButton btIncluir;
    private javax.swing.JButton btLiberarAjusteData;
    private javax.swing.JButton btLiberarContrato;
    private javax.swing.JButton btRenovarLic;
    private br.com.ui.JTableDinnamuS dbgFinanceiro;
    private br.com.ui.JTableDinnamuS dbgLiberacao;
    private br.com.ui.JTableDinnamuS dbgLicencas;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private br.entidades.LicencaDadosContrato licencaDadosContrato1;
    private javax.swing.JLabel txtContratante;
    // End of variables declaration//GEN-END:variables
    private LicencaDadosContrato contrato ;
  
    
   
}
