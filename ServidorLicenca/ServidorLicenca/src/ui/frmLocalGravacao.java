/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import br.com.log.LogDinnamus;
import br.com.ui.MetodosUI_Auxiliares;
import br.manipulararquivos.ManipulacaoArquivo;
import java.io.File;

/**
 *
 * @author Fernando
 */
public class frmLocalGravacao extends javax.swing.JDialog {

    /**
     * Creates new form frmLocalGravacao
     */
    private String cFile="";
    public frmLocalGravacao(java.awt.Frame parent, boolean modal, String File) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.cFile = File;
        File f = ManipulacaoArquivo.InstanciaExistenteFile(cFile);
        setTitle("INFORME O LOCAL DA GRAVAÇÃO DO ARQUIVO : " + f.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("INFORME O LOCAL DE GRAVACAO DA ARQUIVO");

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        jFileChooser1.setEnabled(false);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        
        
        try {
            if(evt.getActionCommand()!="CancelSelection"){            
                File f = jFileChooser1.getSelectedFile();  
                File fDestino = ManipulacaoArquivo.novaInstanciaFile(cFile);
                if(ManipulacaoArquivo.Arquivo_Copiar( cFile, f.getAbsolutePath() + ManipulacaoArquivo.getSeparadorDiretorio() + fDestino.getName())){
                    MetodosUI_Auxiliares.MensagemAoUsuarioSimplesINFO(null, "ARQUIVO GERADO COM SUCESSO", getTitle());
                }else{
                   MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "NÃO FOI POSSÍVEL GERAR O ARQUIVO", getTitle());
                }
            }
            this.dispose();
           
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
